@using TrackMate.Data
@using TrackMate.Service
@inject CollectionService CollectionService
@inject EventService EventService


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TrackMate</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (myCollections != null && myCollections.Count > 0)
        {
            @foreach (var collection in myCollections)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"/collectionView/{collection.CollectionName}/{collection.CollectionID}")">
                        @collection.CollectionName
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private List<Collections> myCollections = new List<Collections>();

    protected override async Task OnInitializedAsync()
    {
        myCollections = await CollectionService.GetCollectionsAsync();

        // Subscribe to the collection change event
        EventService.OnCollectionChanged += RefreshCollections;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    // Refresh collections when notified
    private async void RefreshCollections()
    {
        await InvokeAsync(async () =>
        {
            myCollections = await CollectionService.GetCollectionsAsync();
            StateHasChanged();
        });
    }

    // Cleanup when component is disposed
    public void Dispose()
    {
        EventService.OnCollectionChanged -= RefreshCollections;
    }
}
